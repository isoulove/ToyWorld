{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { atomFamily, selectorFamily, useRecoilState } from \"recoil\";\nimport { sansPrefix } from \"@onflow/fcl\";\nimport { IDLE, PROCESSING } from \"../global/constants\";\nimport { useCurrentUser } from \"../hooks/use-current-user.hook\";\nimport { useAccountItems } from \"../hooks/use-account-items.hook\";\nimport { useKibblesBalance } from \"../hooks/use-kibbles-balance.hook\";\nimport { fetchMarketItem } from \"../flow/fetch-market-item.script\";\nimport { buyMarketItem } from \"../flow/buy-market-item.tx\";\nimport { cancelMarketListing } from \"../flow/cancel-market-listing.tx\";\n\nfunction expand(key) {\n  return key.split(\"|\");\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\");\n}\n\nexport const $state = atomFamily({\n  key: \"market-item::state\",\n  default: selectorFamily({\n    key: \"market-item::default\",\n    get: key => async () => await fetchMarketItem(...expand(key))\n  })\n});\nexport const $status = atomFamily({\n  key: \"market-item::status\",\n  default: IDLE\n});\nexport function useMarketItem(address, id) {\n  _s();\n\n  const [cu] = useCurrentUser();\n  const ownerItems = useAccountItems(address);\n  const cuItems = useAccountItems(cu.addr);\n  const kibble = useKibblesBalance(cu.addr);\n  const key = comp(address, id);\n  const [item, setItem] = useRecoilState($state(key));\n  const [status, setStatus] = useRecoilState($status(key));\n  const owned = sansPrefix(cu.addr) === sansPrefix(address);\n  useEffect(() => {\n    fetchMarketItem(...expand(key)).then(setItem);\n  }, []);\n  return { ...item,\n    status,\n    owned,\n\n    async buy() {\n      await buyMarketItem({\n        itemID: id,\n        ownerAddress: address\n      }, {\n        onStart() {\n          setStatus(PROCESSING);\n        },\n\n        async onSuccess() {\n          if (address !== cu.addr) {\n            ownerItems.refresh();\n          }\n\n          cuItems.refresh();\n          kibble.refresh();\n        },\n\n        async onComplete() {\n          setStatus(IDLE);\n        },\n\n        async onError(error) {// TODO: Handle error\n        }\n\n      });\n    },\n\n    async cancelListing() {\n      await cancelMarketListing({\n        itemID: id\n      }, {\n        onStart() {\n          setStatus(PROCESSING);\n        },\n\n        async onSuccess() {\n          cuItems.refresh();\n          kibble.refresh();\n        },\n\n        async onComplete() {\n          setStatus(IDLE);\n        },\n\n        async onError(error) {// TODO: Handle error\n        }\n\n      });\n    },\n\n    async refresh() {\n      setStatus(PROCESSING);\n      await fetchMarketItem(...expand(key)).then(setItem);\n      setStatus(IDLE);\n    }\n\n  };\n}\n\n_s(useMarketItem, \"NsHx9N6tzyuOAfQT+rVOgvmhk6s=\", false, function () {\n  return [useCurrentUser, useAccountItems, useAccountItems, useKibblesBalance, useRecoilState, useRecoilState];\n});","map":{"version":3,"sources":["/Users/wuchao/flow/nft/ToyWorld/web/src/hooks/use-market-item.hook.js"],"names":["useEffect","atomFamily","selectorFamily","useRecoilState","sansPrefix","IDLE","PROCESSING","useCurrentUser","useAccountItems","useKibblesBalance","fetchMarketItem","buyMarketItem","cancelMarketListing","expand","key","split","comp","address","id","join","$state","default","get","$status","useMarketItem","cu","ownerItems","cuItems","addr","kibble","item","setItem","status","setStatus","owned","then","buy","itemID","ownerAddress","onStart","onSuccess","refresh","onComplete","onError","error","cancelListing"],"mappings":"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","sourcesContent":["import {useEffect} from \"react\"\nimport {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {sansPrefix} from \"@onflow/fcl\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useKibblesBalance} from \"../hooks/use-kibbles-balance.hook\"\nimport {fetchMarketItem} from \"../flow/fetch-market-item.script\"\nimport {buyMarketItem} from \"../flow/buy-market-item.tx\"\nimport {cancelMarketListing} from \"../flow/cancel-market-listing.tx\"\n\nfunction expand(key) {\n  return key.split(\"|\")\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\")\n}\n\nexport const $state = atomFamily({\n  key: \"market-item::state\",\n  default: selectorFamily({\n    key: \"market-item::default\",\n    get: key => async () => await fetchMarketItem(...expand(key)),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"market-item::status\",\n  default: IDLE,\n})\n\nexport function useMarketItem(address, id) {\n  const [cu] = useCurrentUser()\n  const ownerItems = useAccountItems(address)\n  const cuItems = useAccountItems(cu.addr)\n  const kibble = useKibblesBalance(cu.addr)\n  const key = comp(address, id)\n  const [item, setItem] = useRecoilState($state(key))\n  const [status, setStatus] = useRecoilState($status(key))\n  const owned = sansPrefix(cu.addr) === sansPrefix(address)\n\n  useEffect(() => {\n    fetchMarketItem(...expand(key)).then(setItem)\n  }, [])\n\n  return {\n    ...item,\n    status,\n    owned,\n    async buy() {\n      await buyMarketItem(\n        {itemID: id, ownerAddress: address},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            if (address !== cu.addr) {\n              ownerItems.refresh()\n            }\n            cuItems.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async cancelListing() {\n      await cancelMarketListing(\n        {itemID: id},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            cuItems.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchMarketItem(...expand(key)).then(setItem)\n      setStatus(IDLE)\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}