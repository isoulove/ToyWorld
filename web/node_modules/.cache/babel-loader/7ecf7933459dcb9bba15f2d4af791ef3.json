{"ast":null,"code":"import * as fcl from \"@onflow/fcl\";\n\nconst noop = async () => {};\n\nexport async function tx(mods = [], opts = {}) {\n  const onStart = opts.onStart || noop;\n  const onSubmission = opts.onSubmission || noop;\n  const onUpdate = opts.onUpdate || noop;\n  const onSuccess = opts.onSuccess || noop;\n  const onError = opts.onError || noop;\n  const onComplete = opts.onComplete || noop;\n\n  try {\n    onStart();\n    var txId = await fcl.send(mods).then(fcl.decode);\n    console.info(`%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`, \"color:purple;font-weight:bold;font-family:monospace;\");\n    onSubmission(txId);\n    var unsub = await fcl.tx(txId).subscribe(onUpdate);\n    var txStatus = await fcl.tx(txId).onceSealed();\n    unsub();\n    console.info(`%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`, \"color:green;font-weight:bold;font-family:monospace;\");\n    await onSuccess(txStatus);\n    return txStatus;\n  } catch (error) {\n    console.error(`TX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`, error);\n    onError(error);\n  } finally {\n    await onComplete();\n  }\n}\n\nfunction fvsTx(env, txId) {\n  return `https://flow-view-source.com/${env}/tx/${txId}`;\n}","map":{"version":3,"sources":["/Users/wuchao/flow/nft/ToyWorld/web/src/flow/util/tx.js"],"names":["fcl","noop","tx","mods","opts","onStart","onSubmission","onUpdate","onSuccess","onError","onComplete","txId","send","then","decode","console","info","fvsTx","config","get","unsub","subscribe","txStatus","onceSealed","error","env"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,aAArB;;AAEA,MAAMC,IAAI,GAAG,YAAY,CAAE,CAA3B;;AAEA,OAAO,eAAeC,EAAf,CAAkBC,IAAI,GAAG,EAAzB,EAA6BC,IAAI,GAAG,EAApC,EAAwC;AAC7C,QAAMC,OAAO,GAAGD,IAAI,CAACC,OAAL,IAAgBJ,IAAhC;AACA,QAAMK,YAAY,GAAGF,IAAI,CAACE,YAAL,IAAqBL,IAA1C;AACA,QAAMM,QAAQ,GAAGH,IAAI,CAACG,QAAL,IAAiBN,IAAlC;AACA,QAAMO,SAAS,GAAGJ,IAAI,CAACI,SAAL,IAAkBP,IAApC;AACA,QAAMQ,OAAO,GAAGL,IAAI,CAACK,OAAL,IAAgBR,IAAhC;AACA,QAAMS,UAAU,GAAGN,IAAI,CAACM,UAAL,IAAmBT,IAAtC;;AAEA,MAAI;AACFI,IAAAA,OAAO;AACP,QAAIM,IAAI,GAAG,MAAMX,GAAG,CAACY,IAAJ,CAAST,IAAT,EAAeU,IAAf,CAAoBb,GAAG,CAACc,MAAxB,CAAjB;AACAC,IAAAA,OAAO,CAACC,IAAR,CACG,QAAOL,IAAK,MAAKM,KAAK,CAAC,MAAMjB,GAAG,CAACkB,MAAJ,GAAaC,GAAb,CAAiB,KAAjB,CAAP,EAAgCR,IAAhC,CAAsC,EAD/D,EAEE,sDAFF;AAIAL,IAAAA,YAAY,CAACK,IAAD,CAAZ;AACA,QAAIS,KAAK,GAAG,MAAMpB,GAAG,CAACE,EAAJ,CAAOS,IAAP,EAAaU,SAAb,CAAuBd,QAAvB,CAAlB;AACA,QAAIe,QAAQ,GAAG,MAAMtB,GAAG,CAACE,EAAJ,CAAOS,IAAP,EAAaY,UAAb,EAArB;AACAH,IAAAA,KAAK;AACLL,IAAAA,OAAO,CAACC,IAAR,CACG,QAAOL,IAAK,MAAKM,KAAK,CAAC,MAAMjB,GAAG,CAACkB,MAAJ,GAAaC,GAAb,CAAiB,KAAjB,CAAP,EAAgCR,IAAhC,CAAsC,EAD/D,EAEE,qDAFF;AAIA,UAAMH,SAAS,CAACc,QAAD,CAAf;AACA,WAAOA,QAAP;AACD,GAjBD,CAiBE,OAAOE,KAAP,EAAc;AACdT,IAAAA,OAAO,CAACS,KAAR,CACG,MAAKb,IAAK,MAAKM,KAAK,CAAC,MAAMjB,GAAG,CAACkB,MAAJ,GAAaC,GAAb,CAAiB,KAAjB,CAAP,EAAgCR,IAAhC,CAAsC,EAD7D,EAEEa,KAFF;AAIAf,IAAAA,OAAO,CAACe,KAAD,CAAP;AACD,GAvBD,SAuBU;AACR,UAAMd,UAAU,EAAhB;AACD;AACF;;AAED,SAASO,KAAT,CAAeQ,GAAf,EAAoBd,IAApB,EAA0B;AACxB,SAAQ,gCAA+Bc,GAAI,OAAMd,IAAK,EAAtD;AACD","sourcesContent":["import * as fcl from \"@onflow/fcl\"\n\nconst noop = async () => {}\n\nexport async function tx(mods = [], opts = {}) {\n  const onStart = opts.onStart || noop\n  const onSubmission = opts.onSubmission || noop\n  const onUpdate = opts.onUpdate || noop\n  const onSuccess = opts.onSuccess || noop\n  const onError = opts.onError || noop\n  const onComplete = opts.onComplete || noop\n\n  try {\n    onStart()\n    var txId = await fcl.send(mods).then(fcl.decode)\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:purple;font-weight:bold;font-family:monospace;\"\n    )\n    onSubmission(txId)\n    var unsub = await fcl.tx(txId).subscribe(onUpdate)\n    var txStatus = await fcl.tx(txId).onceSealed()\n    unsub()\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:green;font-weight:bold;font-family:monospace;\"\n    )\n    await onSuccess(txStatus)\n    return txStatus\n  } catch (error) {\n    console.error(\n      `TX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      error\n    )\n    onError(error)\n  } finally {\n    await onComplete()\n  }\n}\n\nfunction fvsTx(env, txId) {\n  return `https://flow-view-source.com/${env}/tx/${txId}`\n}\n"]},"metadata":{},"sourceType":"module"}