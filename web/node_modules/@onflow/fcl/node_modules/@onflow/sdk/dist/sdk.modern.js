import{sansPrefix as e,withPrefix as t}from"@onflow/util-address";import{invariant as n}from"@onflow/util-invariant";import{encode as a}from"@onflow/rlp";import{config as o}from"@onflow/config";export{config}from"@onflow/config";import{Transaction as r,SendTransactionRequest as s,AccessAPI as c,GetTransactionRequest as i,ExecuteScriptAtBlockIDRequest as l,ExecuteScriptAtBlockHeightRequest as u,ExecuteScriptAtLatestBlockRequest as d,GetAccountAtBlockHeightRequest as g,GetAccountAtLatestBlockRequest as f,GetEventsForHeightRangeRequest as p,GetEventsForBlockIDsRequest as m,GetBlockByIDRequest as h,GetBlockByHeightRequest as y,GetLatestBlockRequest as k,GetBlockHeaderByIDRequest as I,GetBlockHeaderByHeightRequest as b,GetLatestBlockHeaderRequest as w,GetCollectionByIDRequest as S,PingRequest as B}from"@onflow/protobuf";import{grpc as v}from"@improbable-eng/grpc-web";import{NodeHttpTransport as A}from"@improbable-eng/grpc-web-node-http-transport";import{template as T}from"@onflow/util-template";export{template as cadence,template as cdc}from"@onflow/util-template";function x(){return(x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}const N='{\n  "tag":"UNKNOWN",\n  "assigns":{},\n  "status":"OK",\n  "reason":null,\n  "accounts":{},\n  "params":{},\n  "arguments":{},\n  "message": {\n    "cadence":null,\n    "refBlock":null,\n    "computeLimit":null,\n    "proposer":null,\n    "payer":null,\n    "authorizations":[],\n    "params":[],\n    "arguments":[]\n  },\n  "proposer":null,\n  "authorizations":[],\n  "payer":null,\n  "events": {\n    "eventType":null,\n    "start":null,\n    "end":null,\n    "blockIds":[]\n  },\n  "transaction": {\n    "id":null\n  },\n  "block": {\n    "id":null,\n    "height":null,\n    "isSealed":null\n  },\n  "account": {\n    "addr":null\n  },\n  "collection": {\n    "id":null\n  }\n}',E=new Set(Object.keys(JSON.parse(N))),L=()=>JSON.parse(N),O="abcdefghijklmnopqrstuvwxyz0123456789".split(""),_=()=>O[~~(Math.random()*O.length)],G=()=>Array.from({length:10},_).join(""),C=e=>(e.status="OK",e),U=(e,t)=>(e.status="BAD",e.reason=t,e),D=e=>t=>(t.tag=e,C(t)),K=(e,t={})=>a=>{n("function"==typeof e||"object"==typeof e,"prepAccount must be passed an authorization function or an account object"),n(null!=t.role,"Account must have a role");const o=JSON.parse('{\n  "kind":"ACCOUNT",\n  "tempId":null,\n  "addr":null,\n  "keyId":null,\n  "sequenceNum":null,\n  "signature":null,\n  "signingFunction":null,\n  "resolve":null,\n  "role": {\n    "proposer":false,\n    "authorizer":false,\n    "payer":false,\n    "param":false\n  }\n}'),r=t.role,s=G();return a.accounts[s]=x({},o,{tempId:s},e="function"==typeof e?{resolve:e}:e,{role:x({},o.role,"object"==typeof e.role?e.role:{},{[r]:!0})}),"authorizer"===r?a.authorizations.push(s):a[r]=s,a},R=e=>t=>{let n=G();return t.message.arguments.push(n),t.arguments[n]=JSON.parse('{\n  "kind":"ARGUMENT",\n  "tempId":null,\n  "value":null,\n  "asArgument":null,\n  "xform":null,\n  "resolve": null\n}'),t.arguments[n].tempId=n,t.arguments[n].value=e.value,t.arguments[n].asArgument=e.asArgument,t.arguments[n].xform=e.xform,t.arguments[n].resolve=e.resolve,C(t)},P=D("SCRIPT"),H=D("TRANSACTION"),j=D("GET_TRANSACTION_STATUS"),F=D("GET_TRANSACTION"),z=D("GET_ACCOUNT"),q=D("GET_EVENTS"),J=D("GET_LATEST_BLOCK"),$=D("GET_BLOCK_BY_ID"),Y=D("GET_BLOCK_BY_HEIGHT"),W=D("PING"),M=D("GET_BLOCK"),V=D("GET_BLOCK_HEADER"),X=D("GET_COLLECTION"),Q=e=>t=>t.tag===e,Z=Q("UNKNOWN"),ee=Q("SCRIPT"),te=Q("TRANSACTION"),ne=Q("GET_TRANSACTION_STATUS"),ae=Q("GET_TRANSACTION"),oe=Q("GET_ACCOUNT"),re=Q("GET_EVENTS"),se=Q("GET_LATEST_BLOCK"),ce=Q("GET_BLOCK_BY_ID"),ie=Q("GET_BLOCK_BY_HEIGHT"),le=Q("PING"),ue=Q("GET_BLOCK"),de=Q("GET_BLOCK_HEADER"),ge=Q("GET_COLLECTION"),fe=e=>"OK"===e.status,pe=e=>"BAD"===e.status,me=e=>e.reason,he=async(e,t=[])=>{try{if(e=(e=>{for(let t of Object.keys(e))if(!E.has(t))throw new Error(`"${t}" is an invalid root level Interaction property.`);return e})(await e),pe(e))throw new Error("Interaction Error: "+e.reason);if(!t.length)return e;const[n,...a]=t,o=await n;if(nt(o))return he(o(e),a);if(tt(o)||!o)return he(e,a);if((e=>{if(!et(e)||tt(e)||Qe(e))return!1;for(let t of E)if(!e.hasOwnProperty(t))return!1;return!0})(o))return he(o,a);throw new Error("Invalid Interaction Composition")}catch(e){throw e}},ye=(...e)=>{const[t,n]=e;return Ze(t)&&null==n?e=>ye(e,t):he(t,n)},ke=e=>e,Ie=(e,t,n)=>null==e.assigns[t]?n:e.assigns[t],be=(e,t)=>n=>(n.assigns[e]=t,C(n)),we=(e,t=ke)=>n=>(n.assigns[e]=t(n.assigns[e],n),C(n)),Se=e=>t=>(delete t.assigns[e],C(t)),Be=(e,t)=>Buffer.from(e.padStart(2*t,0),"hex"),ve=(Ae=Buffer.from("FLOW-V0.0-transaction").toString("hex"),Buffer.from(Ae.padEnd(64,0),"hex")).toString("hex");var Ae;const Te=e=>ve+e,xe=e=>Be(e,8),Ne=e=>Buffer.from(JSON.stringify(e),"utf8"),Ee=e=>Buffer.from(e,"utf8"),Le=e=>a(e).toString("hex"),Oe=e=>{return Ce(e),[Ee(e.cadence),e.arguments.map(Ne),(t=e.refBlock,Be(t,32)),e.computeLimit,xe(e.proposalKey.address),e.proposalKey.keyId,e.proposalKey.sequenceNum,xe(e.payer),e.authorizers.map(xe)];var t},_e=e=>{const t=Ge(e);return e.payloadSigs.map(e=>({signerIndex:t.get(e.address),keyId:e.keyId,sig:e.sig})).sort((e,t)=>e.signerIndex>t.signerIndex?1:e.signerIndex<t.signerIndex?-1:e.keyId>t.keyId?1:e.keyId<t.keyId?-1:void 0).map(e=>{return[e.signerIndex,e.keyId,(t=e.sig,Buffer.from(t,"hex"))];var t})},Ge=e=>{const t=new Map;let n=0;const a=e=>{t.has(e)||(t.set(e,n),n++)};return a(e.proposalKey.address),a(e.payer),e.authorizers.forEach(a),t},Ce=e=>{Pe.forEach(t=>ze(e,t)),He.forEach(t=>ze(e.proposalKey,t,"proposalKey"))},Ue=e=>"number"==typeof e,De=e=>"string"==typeof e,Ke=e=>null!==e&&"object"==typeof e,Re=e=>Ke(e)&&e instanceof Array,Pe=[{name:"cadence",check:De},{name:"arguments",check:Re},{name:"refBlock",check:De,defaultVal:"0"},{name:"computeLimit",check:Ue},{name:"proposalKey",check:Ke},{name:"payer",check:De},{name:"authorizers",check:Re}],He=[{name:"address",check:De},{name:"keyId",check:Ue},{name:"sequenceNum",check:Ue}],je=[{name:"payloadSigs",check:Re}],Fe=[{name:"address",check:De},{name:"keyId",check:Ue},{name:"sig",check:De}],ze=(e,t,n,a)=>{const{name:o,check:r,defaultVal:s}=t;if(null==e[o]&&null!=s&&(e[o]=s),null==e[o])throw Je(o,n,a);if(!r(e[o]))throw $e(o,n,a)},qe=(e,t,n)=>t?null==n?`${t}.${e}`:`${t}.${n}.${e}`:e,Je=(e,t,n)=>new Error("Missing field "+qe(e,t,n)),$e=(e,t,n)=>new Error("Invalid field "+qe(e,t,n));async function Ye(e){if(te(e))try{let n=We(e);const a=(t=Ve(e),Te(Le(Oe(t))));await Promise.all(n.map(Me(e,a)));let o=function(e){let t=new Set([e.payer]);return Array.from(t)}(e);const r=(e=>Te(Le((e=>((e=>{je.forEach(t=>ze(e,t)),e.payloadSigs.forEach((e,t)=>{Fe.forEach(n=>ze(e,n,"payloadSigs",t))})})(e),[Oe(e),_e(e)]))(e))))(x({},Ve(e),{payloadSigs:n.map(t=>({address:e.accounts[t].addr,keyId:e.accounts[t].keyId,sig:e.accounts[t].signature}))}));await Promise.all(o.map(Me(e,r)))}catch(t){throw console.error("Signatures",t,{ix:e}),t}var t;return e}function We(e){let t=new Set(e.authorizations);return t.add(e.proposer),t.delete(e.payer),Array.from(t)}function Me(t,n){return async function(a){const o=t.accounts[a];if(null!=o.signature)return;const{signature:r}=await o.signingFunction(function(t,n,a){try{return{f_type:"Signable",f_vsn:"1.0.1",message:n,addr:e(t.addr),keyId:t.keyId,roles:t.role,cadence:a.message.cadence,args:a.message.arguments.map(e=>a.arguments[e].asArgument),data:{},interaction:a,voucher:Xe(a)}}catch(e){throw console.error("buildSignable",e),e}}(o,n,t));t.accounts[a].signature=r}}function Ve(t){return{cadence:t.message.cadence,refBlock:t.message.refBlock||null,computeLimit:t.message.computeLimit,arguments:t.message.arguments.map(e=>t.arguments[e].asArgument),proposalKey:{address:e(t.accounts[t.proposer].addr),keyId:t.accounts[t.proposer].keyId,sequenceNum:t.accounts[t.proposer].sequenceNum},payer:e(t.accounts[t.payer].addr),authorizers:t.authorizations.map(n=>e(t.accounts[n].addr)).reduce((e,t)=>e.find(e=>e===t)?e:[...e,t],[])}}const Xe=e=>({cadence:e.message.cadence,refBlock:e.message.refBlock||null,computeLimit:e.message.computeLimit,arguments:e.message.arguments.map(t=>e.arguments[t].asArgument),proposalKey:{address:t(e.accounts[e.proposer].addr),keyId:e.accounts[e.proposer].keyId,sequenceNum:e.accounts[e.proposer].sequenceNum},payer:t(e.accounts[e.payer].addr),authorizers:e.authorizations.map(n=>t(e.accounts[n].addr)).reduce((e,t)=>e.find(e=>e===t)?e:[...e,t],[]),payloadSigs:We(e).map(n=>({address:t(e.accounts[n].addr),keyId:e.accounts[n].keyId,sig:e.accounts[n].signature}))}),Qe=e=>"number"==typeof e,Ze=e=>Array.isArray(e),et=e=>null!==e&&"object"==typeof e,tt=e=>null==e,nt=e=>"function"==typeof e;function at(e=[]){return ye(L(),e)}const ot=()=>JSON.parse('{\n    "tag":null,\n    "transaction":null,\n    "transactionStatus":null,\n    "transactionId":null,\n    "encodedData":null,\n    "events":null,\n    "account":null,\n    "block":null,\n    "blockHeader":null,\n    "latestBlock":null,\n    "collection":null\n}');async function rt(e,t,n){return new Promise((a,o)=>{v.unary(t,{request:n,host:e,onEnd:({status:e,statusMessage:t,message:n})=>{e===v.Code.OK?a(n):o(new Error(t))}})})}v.setDefaultTransport(A());const st=e=>Buffer.from(e,"hex"),ct=e=>Buffer.from(e.padStart(16,0),"hex"),it=e=>Buffer.from(e).toString("hex"),lt=e=>Buffer.from(JSON.stringify(e),"utf8"),ut=e=>Buffer.from(e).toString("hex"),dt=e=>Buffer.from(e).toString("hex"),gt=e=>Buffer.from(e).toString("hex"),ft=e=>Buffer.from(e).toString("hex"),pt=e=>Buffer.from(e).toString("hex"),mt=e=>Buffer.from(e).toString("hex"),ht=e=>Buffer.from(e).toString("hex"),yt=e=>Buffer.from(e).toString("hex"),kt=async(n,a={})=>{switch(a.node=a.node||await o().get("accessNode.api"),n=await n,!0){case te(n):return a.sendTransaction?a.sendTransaction(n,a):async function(t,n={}){const a=n.unary||rt;t=await t;const o=new r;o.setScript((e=>Buffer.from(e,"utf8"))(t.message.cadence)),o.setGasLimit(t.message.computeLimit),o.setReferenceBlockId(t.message.refBlock?st(t.message.refBlock):null),o.setPayer(ct(e(t.accounts[t.payer].addr))),t.message.arguments.forEach(e=>o.addArguments((e=>Buffer.from(JSON.stringify(e),"utf8"))(t.arguments[e].asArgument))),t.authorizations.map(e=>t.accounts[e].addr).reduce((e,t)=>e.find(e=>e===t)?e:[...e,t],[]).forEach(t=>o.addAuthorizers(ct(e(t))));const i=new r.ProposalKey;i.setAddress(ct(e(t.accounts[t.proposer].addr))),i.setKeyId(t.accounts[t.proposer].keyId),i.setSequenceNumber(t.accounts[t.proposer].sequenceNum),o.setProposalKey(i);for(let n of Object.values(t.accounts))try{if(!n.role.payer&&null!=n.signature){const t=new r.Signature;t.setAddress(ct(e(n.addr))),t.setKeyId(n.keyId),t.setSignature(st(n.signature)),o.addPayloadSignatures(t)}}catch(e){throw console.error("Trouble applying payload signature",{acct:n,ix:t}),e}for(let n of Object.values(t.accounts))try{if(n.role.payer&&null!=n.signature){const t=new r.Signature;t.setAddress(ct(e(n.addr))),t.setKeyId(n.keyId),t.setSignature(st(n.signature)),o.addEnvelopeSignatures(t)}}catch(e){throw console.error("Trouble applying envelope signature",{acct:n,ix:t}),e}const l=new s;l.setTransaction(o);var u=Date.now();const d=await a(n.node,c.SendTransaction,l);var g=Date.now();let f=ot();var p;return f.tag=t.tag,f.transactionId=(p=d.getId_asU8(),Buffer.from(p).toString("hex")),"undefined"!=typeof window&&window.dispatchEvent(new CustomEvent("FLOW::TX",{detail:{txId:f.transactionId,delta:g-u}})),f}(n,a);case ne(n):return a.sendGetTransactionStatus?a.sendGetTransactionStatus(n,a):async function(e,t={}){const n=t.unary||rt;e=await e;const a=new i;a.setId(Buffer.from(e.transaction.id,"hex"));const o=await n(t.node,c.GetTransactionResult,a);let r=o.getEventsList(),s=ot();return s.tag=e.tag,s.transactionStatus={status:o.getStatus(),statusCode:o.getStatusCode(),errorMessage:o.getErrorMessage(),events:r.map(e=>{return{type:e.getType(),transactionId:(t=e.getTransactionId_asU8(),Buffer.from(t).toString("hex")),transactionIndex:e.getTransactionIndex(),eventIndex:e.getEventIndex(),payload:JSON.parse(Buffer.from(e.getPayload_asU8()).toString("utf8"))};var t})},s}(n,a);case ae(n):return a.sendGetTransaction?a.sendGetTransaction(n,a):async function(e,t={}){const n=t.unary||rt;e=await e;const a=new i;a.setId(Buffer.from(e.transaction.id,"hex"));const o=await n(t.node,c.GetTransaction,a);let r=ot();r.tag=e.tag;const s=e=>({address:it(e.getAddress_asU8()),keyId:e.getKeyId(),signature:it(e.getSignature_asU8())});let l=o.getTransaction();var u;return r.transaction={script:Buffer.from(l.getScript_asU8()).toString("utf8"),args:l.getArgumentsList().map(e=>JSON.parse(Buffer.from(e).toString("utf8"))),referenceBlockId:it(l.getReferenceBlockId_asU8()),gasLimit:l.getGasLimit(),proposalKey:(u=l.getProposalKey(),{address:it(u.getAddress_asU8()),keyId:u.getKeyId(),sequenceNumber:u.getSequenceNumber()}),payer:it(l.getPayer_asU8()),authorizers:l.getAuthorizersList().map(it),payloadSignatures:l.getPayloadSignaturesList().map(s),envelopeSignatures:l.getEnvelopeSignaturesList().map(s)},r}(n,a);case ee(n):return a.sendExecuteScript?a.sendExecuteScript(n,a):async function(e,t={}){const n=t.unary||rt;let a,o;if((e=await e).block.id){a=new l,a.setBlockId(Buffer.from(e.block.id,"hex"));const r=Buffer.from(e.message.cadence,"utf8");e.message.arguments.forEach(t=>a.addArguments(lt(e.arguments[t].asArgument))),a.setScript(r),o=await n(t.node,c.ExecuteScriptAtBlockID,a)}else if(e.block.height){a=new u,a.setBlockHeight(Number(e.block.height));const r=Buffer.from(e.message.cadence,"utf8");e.message.arguments.forEach(t=>a.addArguments(lt(e.arguments[t].asArgument))),a.setScript(r),o=await n(t.node,c.ExecuteScriptAtBlockHeight,a)}else{a=new d;const r=Buffer.from(e.message.cadence,"utf8");e.message.arguments.forEach(t=>a.addArguments(lt(e.arguments[t].asArgument))),a.setScript(r),o=await n(t.node,c.ExecuteScriptAtLatestBlock,a)}let r=ot();return r.tag=e.tag,r.encodedData=JSON.parse(Buffer.from(o.getValue_asU8()).toString("utf8")),r}(n,a);case oe(n):return a.sendGetAccount?a.sendGetAccount(n,a):async function(n,a={}){const o=a.unary||rt,r=(n=await n).block.height?new g:new f;var s;n.block.height&&r.setBlockHeight(Number(n.block.height)),r.setAddress((s=e(n.account.addr),Buffer.from(s.padStart(16,0),"hex")));const i=await o(a.node,n.block.height?c.GetAccountAtBlockHeight:c.GetAccountAtLatestBlock,r);let l=ot();l.tag=n.tag;const u=i.getAccount();let d;const p=(d=u.getContractsMap())?d.getEntryList().reduce((e,t)=>x({},e,{[t[0]]:Buffer.from(t[1]||new UInt8Array).toString("utf8")}),{}):{};return l.account={address:t(ut(u.getAddress_asU8())),balance:u.getBalance(),code:Buffer.from(u.getCode_asU8()||new UInt8Array).toString("utf8"),contracts:p,keys:u.getKeysList().map(e=>({index:e.getIndex(),publicKey:ut(e.getPublicKey_asU8()),signAlgo:e.getSignAlgo(),hashAlgo:e.getHashAlgo(),weight:e.getWeight(),sequenceNumber:e.getSequenceNumber(),revoked:e.getRevoked()}))},l}(n,a);case re(n):return a.sendGetEvents?a.sendGetEvents(n,a):async function(e,t={}){const n=t.unary||rt;let a;const o=(e=await e).events.start?new p:new m;o.setType(e.events.eventType),e.events.start?(o.setStartHeight(Number(e.events.start)),o.setEndHeight(Number(e.events.end)),a=await n(t.node,c.GetEventsForHeightRange,o)):(e.events.blockIds.forEach(e=>o.addBlockIds(Buffer.from(e,"hex"))),a=await n(t.node,c.GetEventsForBlockIDs,o));let r=ot();r.tag=e.tag;const s=a.getResultsList();return r.events=s.reduce((e,t)=>{const n=dt(t.getBlockId_asU8()),a=t.getBlockHeight(),o=t.getBlockTimestamp().toDate().toISOString();return t.getEventsList().forEach(t=>{e.push({blockId:n,blockHeight:a,blockTimestamp:o,type:t.getType(),transactionId:dt(t.getTransactionId_asU8()),transactionIndex:t.getTransactionIndex(),eventIndex:t.getEventIndex(),payload:JSON.parse(Buffer.from(t.getPayload_asU8()).toString("utf8"))})}),e},[]),r}(n,a);case se(n):return a.sendGetLatestBlock?a.sendGetLatestBlock(n,a):async function(e,t={}){e=await e;const n=new k;e.latestBlock&&e.latestBlock.isSealed&&(n.setIsSealed(e.latestBlock.isSealed),console.error("\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        ".replace(/\n\s+/g,"\n").trim(),"font-weight:bold;font-family:monospace;")),e.block&&e.block.isSealed&&n.setIsSealed(e.block.isSealed);const a=(await rt(t.node,c.GetLatestBlock,n)).getBlock(),o=a.getCollectionGuaranteesList(),r=a.getBlockSealsList(),s=a.getSignaturesList(),i=ot();return i.tag=e.tag,i.block={id:pt(a.getId_asU8()),parentId:pt(a.getParentId_asU8()),height:a.getHeight(),timestamp:a.getTimestamp(),collectionGuarantees:o.map(e=>({collectionId:pt(e.getCollectionId_asU8()),signatures:e.getSignaturesList()})),blockSeals:r.map(e=>({blockId:pt(e.getBlockId_asU8()),executionReceiptId:pt(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList(),resultApprovalSignatures:e.getResultApprovalSignaturesList()})),signatures:s},i}(n,a);case ue(n):return a.sendGetBlock?a.sendGetBlock(n,a):async function(e,t={}){const n=t.unary||rt;let a,o;(e=await e).block.id?(a=new h,a.setId(Buffer.from(e.block.id,"hex")),o=await n(t.node,c.GetBlockByID,a)):e.block.height?(a=new y,a.setHeight(Number(e.block.height)),o=await n(t.node,c.GetBlockByHeight,a)):(a=new k,e.block&&e.block.isSealed&&a.setIsSealed(e.block.isSealed),o=await n(t.node,c.GetLatestBlock,a));const r=o.getBlock(),s=r.getCollectionGuaranteesList(),i=r.getBlockSealsList(),l=r.getSignaturesList().map(gt),u=ot();return u.tag=e.tag,u.block={id:gt(r.getId_asU8()),parentId:gt(r.getParentId_asU8()),height:r.getHeight(),timestamp:r.getTimestamp().toDate().toISOString(),collectionGuarantees:s.map(e=>({collectionId:gt(e.getCollectionId_asU8()),signatures:e.getSignaturesList().map(gt)})),blockSeals:i.map(e=>({blockId:gt(e.getBlockId_asU8()),executionReceiptId:gt(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList().map(gt),resultApprovalSignatures:e.getResultApprovalSignaturesList().map(gt)})),signatures:l},u}(n,a);case de(n):return a.sendGetBlockHeader?a.sendGetBlockHeader(n,a):async function(e,t={}){const n=t.unary||rt;let a,o;(e=await e).block.id?(a=new I,a.setId(Buffer.from(e.block.id,"hex")),o=await n(t.node,c.GetBlockHeaderByID,a)):e.block.height?(a=new b,a.setHeight(Number(e.block.height)),o=await n(t.node,c.GetBlockHeaderByHeight,a)):(a=new w,e.block&&e.block.isSealed&&a.setIsSealed(e.block.isSealed),o=await n(t.node,c.GetLatestBlockHeader,a));const r=o.getBlock(),s=ot();return s.tag=e.tag,s.blockHeader={id:ft(r.getId_asU8()),parentId:ft(r.getParentId_asU8()),height:r.getHeight(),timestamp:r.getTimestamp().toDate().toISOString()},s}(n,a);case ce(n):return a.sendGetBlockById?a.sendGetBlockById(n,a):async function(e,t={}){e=await e;const n=new h;n.setId(Buffer.from(e.block.id,"hex"));const a=(await rt(t.node,c.GetBlockByID,n)).getBlock(),o=a.getCollectionGuaranteesList(),r=a.getBlockSealsList(),s=a.getSignaturesList(),i=ot();return i.tag=e.tag,i.block={id:mt(a.getId_asU8()),parentId:mt(a.getParentId_asU8()),height:a.getHeight(),timestamp:a.getTimestamp(),collectionGuarantees:o.map(e=>({collectionId:mt(e.getCollectionId_asU8()),signatures:e.getSignaturesList()})),blockSeals:r.map(e=>({blockId:mt(e.getBlockId_asU8()),executionReceiptId:mt(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList(),resultApprovalSignatures:e.getResultApprovalSignaturesList()})),signatures:s},i}(n,a);case ie(n):return a.sendGetBlockByHeight?a.sendGetBlockByHeight(n,a):async function(e,t={}){e=await e;const n=new y;n.setHeight(Number(e.block.height));const a=(await rt(t.node,c.GetBlockByHeight,n)).getBlock(),o=a.getCollectionGuaranteesList(),r=a.getBlockSealsList(),s=a.getSignaturesList(),i=ot();return i.tag=e.tag,i.block={id:ht(a.getId_asU8()),parentId:ht(a.getParentId_asU8()),height:a.getHeight(),timestamp:a.getTimestamp(),collectionGuarantees:o.map(e=>({collectionId:ht(e.getCollectionId_asU8()),signatures:e.getSignaturesList()})),blockSeals:r.map(e=>({blockId:ht(e.getBlockId_asU8()),executionReceiptId:ht(e.getExecutionReceiptId_asU8()),executionReceiptSignatures:e.getExecutionReceiptSignaturesList(),resultApprovalSignatures:e.getResultApprovalSignaturesList()})),signatures:s},i}(n,a);case ge(n):return a.sendGetCollection?a.sendGetCollection(n,a):async function(e,t={}){const n=t.unary||rt;e=await e;let a=new S;a.setId(Buffer.from(e.collection.id,"hex"));const o=(await n(t.node,c.GetCollectionByID,a)).getCollection(),r=ot();return r.tag=e.tag,r.collection={id:yt(o.getId_asU8()),transactionIds:o.getTransactionIdsList().map(yt)},r}(n,a);case le(n):return a.sendPing?a.sendPing(n,a):async function(e,t={}){const n=t.unary||rt;e=await e;const a=new B;await n(t.node,c.Ping,a);let o=ot();return o.tag=e.tag,o}(n,a);default:return n}};function It(e=null){return ye([M,t=>(t.block.isSealed=e,C(t))])}function bt(t){return ye([z,n=>(n.account.addr=e(t),C(n))])}const wt=async(e,t,n)=>{try{return Number(e)}catch(e){throw new Error("Decode Number Error : "+n.join("."))}},St=async e=>e,Bt=async(e,t,n)=>{const a=await e.fields.reduce(async(e,a)=>((e=await e)[a.name]=await Tt(a.value,t,[...n,a.name]),e),Promise.resolve({})),o=e.id&&At(t,e.id);return o?await o(a):a},vt={UInt:wt,Int:wt,UInt8:wt,Int8:wt,UInt16:wt,Int16:wt,UInt32:wt,Int32:wt,UInt64:wt,Int64:wt,UInt128:wt,Int128:wt,UInt256:wt,Int256:wt,Word8:wt,Word16:wt,Word32:wt,Word64:wt,UFix64:St,Fix64:St,String:St,Character:St,Bool:St,Address:St,Void:async()=>null,Optional:async(e,t,n)=>e?await Tt(e,t,n):null,Reference:async e=>({address:e.address,type:e.type}),Array:async(e,t,n)=>await Promise.all(e.map(e=>new Promise(async a=>a(await Tt(e,t,[...n,e.type]))))),Dictionary:async(e,t,n)=>await e.reduce(async(e,a)=>((e=await e)[await Tt(a.key,t,[...n,a.key])]=await Tt(a.value,t,[...n,a.key]),e),Promise.resolve({})),Event:Bt,Resource:Bt,Struct:Bt},At=(e,t)=>{const n=Object.keys(e).find(e=>/^\/.*\/$/.test(e)?new RegExp(e.substring(1,e.length-1)).test(t):e===t);return t&&n&&e[n]},Tt=async(e,t,n)=>{let a=At(t,e.type);if(!a)throw new Error(`Undefined Decoder Error: ${e.type}@${n.join(".")}`);return await a(e.value,t,n)},xt=async(e,t={},n=[])=>{let a=x({},vt,t);return await Tt(e,a,n)},Nt=async(e,t={})=>{let n=x({},vt,t);return e.encodedData?await xt(e.encodedData,n):e.transactionStatus?x({},e.transactionStatus,{events:await Promise.all(e.transactionStatus.events.map(async function(e){return{type:e.type,transactionId:e.transactionId,transactionIndex:e.transactionIndex,eventIndex:e.eventIndex,data:await xt(e.payload,n)}}))}):e.transaction?e.transaction:e.events?await Promise.all(e.events.map(async function(e){return{blockId:e.blockId,blockHeight:e.blockHeight,blockTimestamp:e.blockTimestamp,type:e.type,transactionId:e.transactionId,transactionIndex:e.transactionIndex,eventIndex:e.eventIndex,data:await xt(e.payload,n)}})):e.account?e.account:e.block?e.block:e.blockHeader?e.blockHeader:e.latestBlock?(console.error("\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        ".replace(/\n\s+/g,"\n").trim(),"font-weight:bold;font-family:monospace;"),e.latestBlock):e.transactionId?e.transactionId:e.collection?e.collection:null};function Et(e){return async t=>te(t)?(t.message.refBlock||(t.message.refBlock=await async function(e){var t;return t=await ye(L(),[It()]),t=await kt(t,e),(t=await Nt(t)).id}(e)),C(t)):C(t)}const Lt=e=>"function"==typeof e,Ot=e=>"string"==typeof e;async function _t(e){if(te(e)||ee(e)){var t=Ie(e,"ix.cadence");n(Lt(t)||Ot(t),"Cadence needs to be a function or a string."),Lt(t)&&(t=await t({})),n(Ot(t),"Cadence needs to be a string at this point."),e.message.cadence=await o().where(/^0x/).then(e=>Object.entries(e).reduce((e,[t,n])=>e.replace(t,n),t))}return e}const Gt=e=>"function"==typeof e;function Ct(e){return n(null!=typeof e.xform,"No type specified for argument: "+e.value),Gt(e.xform)?e.xform(e.value):Gt(e.xform.asArgument)?e.xform.asArgument(e.value):void n(!1,"Invalid Argument",e)}async function Ut(e){if(te(e)||ee(e))for(let[t,n]of Object.entries(e.arguments))e.arguments[t].asArgument=Ct(n);return e}function Dt(e,t){try{return{f_type:"PreSignable",f_vsn:"1.0.1",roles:e.role,cadence:t.message.cadence,args:t.message.arguments.map(e=>t.arguments[e].asArgument),data:{},interaction:t,voucher:Xe(t)}}catch(e){throw console.error("buildPreSignable",e),e}}async function Kt(e,t,a,o=3){n(o,"Account Resolve Recursion Limit Exceeded",{ix:e,accounts:t});let r=[];for(let n of t){var s=a||n;"function"==typeof n.resolve&&(n=await n.resolve(n,Dt(n,e))),Array.isArray(n)?await Kt(e,n,s,o-1):(e.accounts[n.tempId]=e.accounts[n.tempId]||n,e.accounts[n.tempId].role.proposer=e.accounts[n.tempId].role.proposer||n.role.proposer,e.accounts[n.tempId].role.payer=e.accounts[n.tempId].role.payer||n.role.payer,e.accounts[n.tempId].role.authorizer=e.accounts[n.tempId].role.authorizer||n.role.authorizer,e.accounts[n.tempId].role.proposer&&e.proposer===s.tempId&&(e.proposer=n.tempId),e.accounts[n.tempId].role.payer&&e.payer===s.tempId&&(e.payer=n.tempId),e.accounts[n.tempId].role.authorizer&&(a?r=[...r,n.tempId]:e.authorizations=e.authorizations.map(e=>e===s.tempId?n.tempId:e))),s.tempId!=n.tempId&&delete e.accounts[s.tempId]}a&&(e.authorizations=e.authorizations.map(e=>e===a.tempId?r:e).reduce((e,t)=>Array.isArray(t)?[...e,...t]:[...e,t],[]))}async function Rt(e){if(te(e))try{await Kt(e,Object.values(e.accounts)),await Kt(e,Object.values(e.accounts))}catch(e){throw console.error("=== SAD PANDA ===\n\n",e,"\n\n=== SAD PANDA ==="),e}return e}async function Pt(e){const t=Ie(e,"ix.validators",[]);return ye(e,t.map(e=>t=>e(t,{Ok:C,Bad:U})))}const Ht=ye([_t,Ut,Rt,async function(e){return te(e)&&null==e.message.refBlock&&(e.message.refBlock=(await kt(at([It()])).then(Nt)).id),e},async function(e){if(te(e)){var t=Object.values(e.accounts).find(e=>e.role.proposer);n(t,"Transactions require a proposer"),null==t.sequenceNum&&(e.accounts[t.tempId].sequenceNum=await kt(await at([bt(t.addr)])).then(Nt).then(e=>e.keys).then(e=>e.find(e=>e.index===t.keyId)).then(e=>e.sequenceNumber))}return e},Ye,async function(t){for(let n of Object.keys(t.accounts))t.accounts[n].addr=e(t.accounts[n].addr);return t},Pt]),jt=async(e=[],t={})=>{const n=await o().get("sdk.send",t.send||kt),a=await o().get("sdk.resolve",t.resolve||Ht);return Array.isArray(e)&&(e=ye(L(),e)),n(await a(e),t)};async function Ft(e){const t=await o().where(/^decoder\./),n=Object.entries(t).map(([e,t])=>[e=`/${e.replace(/^decoder\./,"")}$/`,t]);return Nt(e,Object.fromEntries(n))}function zt(...e){let t=e[1]||("object"==typeof e[0]?e[0]:void 0),n="boolean"==typeof e[0]?e[0]:void 0;return"object"==typeof e[0]&&console.warn("\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    ","font-weight:bold;font-family:monospace;"),jt([It(n)],t).then(Nt)}function qt(e,t){return jt([bt(e)],t).then(Nt)}function Jt(e=[]){return ye(e.map(e=>K(e,{role:"authorizer"})))}function $t(e,t,n,a){return{addr:e,signingFunction:t,keyId:n,sequenceNum:a}}function Yt(e){return we("ix.validators",t=>Array.isArray(t)?t.push(e):[e])}function Wt(e){return ye([t=>(t.block.height=e,t),Yt(e=>{if("boolean"==typeof e.block.isSealed)throw new Error("Unable to specify both block height and isSealed.");if(e.block.id)throw new Error("Unable to specify both block height and block id.");return e})])}function Mt(e){return ye([t=>(t.block.id=e,C(t)),Yt((e,{Ok:t,Bad:n})=>oe(e)?n(e,"Unable to specify a block id with a Get Account interaction."):"boolean"==typeof e.block.isSealed?n(e,"Unable to specify both block id and isSealed."):e.block.height?n(e,"Unable to specify both block id and block height."):t(e))])}function Vt(e,t,n){return void 0===t&&void 0===n||console.warn("\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    ","font-weight:bold;font-family:monospace;"),ye([q,a=>(a.events.eventType=e,a.events.start=t,a.events.end=n,C(a))])}function Xt(e,t,n){return ye([q,a=>(a.events.eventType=e,a.events.start=t,a.events.end=n,C(a))])}function Qt(e,t=[]){return ye([q,n=>(n.events.eventType=e,n.events.blockIds=t,C(n))])}function Zt(e=null){return ye([V,t=>(t.block.isSealed=e,C(t))])}function en(e=!1){return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  ","font-weight:bold;font-family:monospace;"),ye([J,t=>(t.block.isSealed=e,C(t))])}function tn(e){return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  ","font-weight:bold;font-family:monospace;"),ye([$,t=>(t.block.ids=[e],C(t))])}function nn(e){return console.warn("\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  ","font-weight:bold;font-family:monospace;"),ye([Y,t=>(t.block.height=e,C(t))])}function an(e=null){return ye([X,t=>(t.collection.id=e,t)])}function on(e){return ye([j,t=>(t.transaction.id=e,C(t))])}function rn(e){return ye([F,t=>(t.transaction.id=e,C(t))])}function sn(e){return t=>(t.message.computeLimit=e,t)}function cn(e=[]){return ye(e.map(R))}function ln(e,t){return{value:e,xform:t}}async function un(e){return K(e,{role:"proposer"})}async function dn(e){return K(e,{role:"payer"})}function gn(){return W}function fn(e){return ye([t=>(t.message.refBlock=e,C(t))])}function pn(...e){return ye([P,be("ix.cadence",T(...e))])}const mn=[];function hn(...e){return ye([H,be("ix.cadence",T(...e)),e=>(e.message.computeLimit=e.message.computeLimit||10,e.message.refBlock=e.message.refBlock||null,e.authorizations=e.authorizations||mn,C(e))])}function yn(...e){if(e.length>1){const[t,n]=e;return yn((e,{Ok:a,Bad:o})=>t?a(e):o(e,n))}const[t]=e;return e=>t(e,{Ok:C,Bad:U})}function kn(e){return console.error("\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    ","font-weight:bold;font-family:monospace;"),_t(e)}const In=e=>{(({name:e,transitionsPath:t})=>{console.error(`\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${e} builder has been removed from the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${t}\n    ============================\n  `,"font-weight:bold;font-family:monospace;")})({name:"params",transitionsPath:"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params"})},bn=e=>(({name:e,transitionsPath:t})=>{console.warn(`\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${e} builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${t}\n    ============================\n  `,"font-weight:bold;font-family:monospace;")})({name:"param",transitionsPath:"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params"});export{qt as account,ln as arg,cn as args,Wt as atBlockHeight,Mt as atBlockId,$t as authorization,Jt as authorizations,at as build,Ft as decode,Se as destroy,Ie as get,bt as getAccount,It as getBlock,nn as getBlockByHeight,tn as getBlockById,Zt as getBlockHeader,an as getCollection,Vt as getEvents,Xt as getEventsAtBlockHeightRange,Qt as getEventsAtBlockIds,en as getLatestBlock,rn as getTransaction,on as getTransactionStatus,L as interaction,yn as invariant,pe as isBad,oe as isGetAccount,ue as isGetBlock,ie as isGetBlockByHeight,ce as isGetBlockById,de as isGetBlockHeader,ge as isGetCollection,re as isGetEvents,se as isGetLatestBlock,ae as isGetTransaction,ne as isGetTransactionStatus,fe as isOk,le as isPing,ee as isScript,te as isTransaction,Z as isUnknown,zt as latestBlock,sn as limit,bn as param,In as params,dn as payer,gn as ping,ye as pipe,un as proposer,be as put,fn as ref,Ht as resolve,Rt as resolveAccounts,Ut as resolveArguments,kn as resolveParams,Et as resolveRefBlockId,Ye as resolveSignatures,Pt as resolveValidators,pn as script,jt as send,hn as transaction,we as update,Yt as validator,me as why};
//# sourceMappingURL=sdk.modern.js.map
