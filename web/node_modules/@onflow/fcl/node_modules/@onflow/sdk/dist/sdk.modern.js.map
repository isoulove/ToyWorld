{"version":3,"file":"sdk.modern.js","sources":["../src/interaction/interaction.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/utils/create-voucher.js","../src/utils/index.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-events.js","../src/send/send-get-block.js","../src/send/send-get-block-header.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/send-get-collection.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-validators.js","../src/resolve/resolve.js","../src/resolve/resolve-final-normalization.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-params.js","../src/sdk.js","../src/utils/deprecate.js"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\nimport {isArray, isObj, isNull, isNumber, isFn} from \"../utils\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  acct = typeof acct === \"function\" ? {resolve: acct} : acct\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx => prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"), 32).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {createVoucher} from \"../utils\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {findInsideSigners} from \"../resolve/resolve-signatures\"\nexport const createVoucher = ix => {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n    payloadSigs: findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    })),\n  }\n}\n","export {createVoucher} from \"./create-voucher.js\"\nexport {deprecate} from \"./deprecate.js\"\n\nexport const isNumber = d => typeof d === \"number\"\nexport const isString = d => typeof d === \"string\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(sig.getAddress_asU8()),\n    keyId: sig.getKeyId(),\n    signature: u8ToHex(sig.getSignature_asU8())\n  })\n\n  let transaction = res.getTransaction()\n  ret.transaction = {\n      script: Buffer.from(transaction.getScript_asU8()).toString(\"utf8\"),\n      args: (transaction.getArgumentsList()).map(arg => JSON.parse(Buffer.from(arg).toString(\"utf8\"))),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    \n    req.setBlockId(hexBuffer(ix.block.id))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockID, req)\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n\n    req.setBlockHeight(Number(ix.block.height))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockHeight, req) \n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setBlockHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, ix.block.height ? AccessAPI.GetAccountAtBlockHeight : AccessAPI.GetAccountAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: Buffer.from(contract[1] || new UInt8Array()).toString(\"utf8\")\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: Buffer.from(account.getCode_asU8() || new UInt8Array()).toString(\"utf8\"),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n  \n  ix = await ix\n \n  let res\n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n\n    res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n\n    res = await unary(opts.node, AccessAPI.GetEventsForBlockIDs, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = u8ToHex(result.getBlockId_asU8())\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp().toDate().toISOString()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {GetBlockByIDRequest, GetBlockByHeightRequest, GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlock(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n    \n    res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n  } else {\n    req = new GetLatestBlockRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n  }\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = (block.getSignaturesList()).map(u8ToHex)\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp().toDate().toISOString(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: (collectionGuarantee.getSignaturesList()).map(u8ToHex),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: (blockSeal.getExecutionReceiptSignaturesList()).map(u8ToHex),\n      resultApprovalSignatures: (blockSeal.getResultApprovalSignaturesList()).map(u8ToHex),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetLatestBlockHeaderRequest, GetBlockHeaderByIDRequest, GetBlockHeaderByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockHeader(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockHeaderByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockHeaderByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByHeight, req)\n  } else {\n    req = new GetLatestBlockHeaderRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlockHeader, req)\n  }\n\n  const blockHeader = res.getBlock()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: u8ToHex(blockHeader.getId_asU8()),\n    parentId: u8ToHex(blockHeader.getParentId_asU8()),\n    height: blockHeader.getHeight(),\n    timestamp: blockHeader.getTimestamp().toDate().toISOString(),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetCollectionByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetCollection(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req = new GetCollectionByIDRequest()\n  req.setId(hexBuffer(ix.collection.id))\n\n  let res = await unary(opts.node, AccessAPI.GetCollectionByID, req)\n\n  const collection = res.getCollection()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: u8ToHex(collection.getId_asU8()),\n    transactionIds: (collection.getTransactionIdsList()).map(u8ToHex)\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetBlockHeader,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n    isGetCollection,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return opts.sendTransaction ? opts.sendTransaction(ix, opts) : sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, opts) : sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return opts.sendGetTransaction ? opts.sendGetTransaction(ix, opts) : sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return opts.sendExecuteScript ? opts.sendExecuteScript(ix, opts) : sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return opts.sendGetAccount ? opts.sendGetAccount(ix, opts) : sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return opts.sendGetEvents ? opts.sendGetEvents(ix, opts) : sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return opts.sendGetLatestBlock ? opts.sendGetLatestBlock(ix, opts) : sendGetLatestBlock(ix,  opts)\n        case isGetBlock(ix):\n            return opts.sendGetBlock ? opts.sendGetBlock(ix, opts) : sendGetBlock(ix, opts)\n        case isGetBlockHeader(ix):\n            return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, opts) : sendGetBlockHeader(ix, opts)\n        case isGetBlockById(ix):\n            return opts.sendGetBlockById ? opts.sendGetBlockById(ix, opts) : sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return opts.sendGetBlockByHeight ? opts.sendGetBlockByHeight(ix, opts) : sendGetBlockByHeight(ix, opts)\n        case isGetCollection(ix):\n            return opts.sendGetCollection ? opts.sendGetCollection(ix, opts) : sendGetCollection(ix, opts)\n        case isPing(ix):\n            return opts.sendPing ? opts.sendPing(ix, opts) : sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createVoucher} from \"../utils\"\n\nconst isFn = v => typeof v === \"function\"\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send(build([getBlock()])).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] === \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(eventType, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport async function payer(authz) {\n  return prepAccount(authz, {role: PAYER})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {resolveCadence} from \"./resolve-cadence.js\"\n\nexport function resolveParams (ix) {\n  console.error(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n\n  return resolveCadence(ix)\n}\n","import {deprecate} from \"./utils\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\n\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isGetLatestBlock,\n  isGetBlockById,\n  isGetBlockByHeight,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n} from \"./interaction/interaction.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {latestBlock} from \"./latest-block/latest-block.js\"\nexport {account} from \"./account/account.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getLatestBlock} from \"./build/build-get-latest-block.js\"\nexport {getBlockById} from \"./build/build-get-block-by-id.js\"\nexport {getBlockByHeight} from \"./build/build-get-block-by-height\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\n\n// Resolvers\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\nexport {resolveParams} from \"./resolve/resolve-params\"\n\n// Config\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = params =>\n  deprecate.error({\n    name: \"params\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\nexport const param = params =>\n  deprecate.warn({\n    name: \"param\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\n","const buildWarningMessage = ({name, transitionsPath}) => {\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst buildErrorMessage = ({name, transitionsPath}) => {\n  console.error(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been removed from the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst warn = deprecated => buildWarningMessage(deprecated)\n\nconst error = deprecated => {\n  buildErrorMessage(deprecated)\n}\n\nexport const deprecate = {\n  warn,\n  error,\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","Ok","ix","status","Bad","reason","makeIx","wat","tag","prepAccount","acct","opts","invariant","role","ACCOUNT","tempId","accounts","resolve","[object Object]","authorizations","push","makeArgument","arg","message","arguments","value","asArgument","xform","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isOk","isBad","why","recPipe","async","fns","key","has","Error","hardMode","hd","rest","cur","isFn","isNull","isObj","isNumber","hasOwnProperty","isInteraction","e","pipe","args","arg1","arg2","isArray","d","identity","v","get","fallback","assigns","put","update","fn","destroy","leftPaddedHexBuffer","pad","Buffer","padStart","TRANSACTION_DOMAIN_TAG","toString","padEnd","prependTransactionDomainTag","tx","addressBuffer","addr","argumentToString","stringify","scriptBuffer","script","rlpEncode","encode","preparePayload","validatePayload","cadence","map","block","refBlock","computeLimit","proposalKey","address","keyId","sequenceNum","payer","authorizers","preparePayloadSignatures","signers","collectSigners","payloadSigs","sig","signerIndex","sort","a","b","signature","Map","i","addSigner","set","forEach","payloadFields","field","checkField","proposalKeyFields","isString","isObject","name","check","defaultVal","envelopeFields","payloadSigFields","obj","base","index","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","findInsideSigners","insidePayload","prepForEncoding","Promise","all","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","validateEnvelope","prepareEnvelope","encodeOutsideMessage","id","error","console","inside","add","proposer","delete","payload","signingFunction","f_type","f_vsn","sansPrefix","roles","data","voucher","createVoucher","buildSignable","cid","reduce","prev","current","find","item","withPrefix","build","response","unary","host","method","request","reject","grpc","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","u8ToHex","u8","argumentBuffer","send","node","config","sendTransaction","defaultUnary","Transaction","setScript","setGasLimit","setReferenceBlockId","setPayer","addArguments","addAuthorizers","ProposalKey","setAddress","setKeyId","setSequenceNumber","setProposalKey","values","Signature","setSignature","addPayloadSignatures","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","AccessAPI","SendTransaction","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendGetTransactionStatus","GetTransactionRequest","setId","transaction","GetTransactionResult","events","getEventsList","transactionStatus","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","getPayload_asU8","sendGetTransaction","GetTransaction","unwrapSignature","getAddress_asU8","getKeyId","getSignature_asU8","getTransaction","getScript_asU8","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","getProposalKey","sequenceNumber","getSequenceNumber","getPayer_asU8","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendExecuteScript","ExecuteScriptAtBlockIDRequest","setBlockId","code","ExecuteScriptAtBlockID","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtBlockHeight","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendGetAccount","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","account","GetAccountAtBlockHeight","GetAccountAtLatestBlock","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","UInt8Array","balance","getBalance","getCode_asU8","getKeysList","publicKey","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetEvents","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","GetEventsForHeightRange","blockIds","addBlockIds","GetEventsForBlockIDs","results","getResultsList","blocks","result","blockId","getBlockId_asU8","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","toDate","toISOString","sendGetLatestBlock","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetBlock","GetBlockByIDRequest","GetBlockByID","GetBlockByHeightRequest","setHeight","GetBlockByHeight","sendGetBlockHeader","GetBlockHeaderByIDRequest","GetBlockHeaderByID","GetBlockHeaderByHeightRequest","GetBlockHeaderByHeight","GetLatestBlockHeaderRequest","GetLatestBlockHeader","blockHeader","sendGetBlockById","sendGetBlockByHeight","sendGetCollection","GetCollectionByIDRequest","collection","GetCollectionByID","getCollection","transactionIds","getTransactionIdsList","sendPing","PingRequest","Ping","decodeNumber","num","_","stack","decodeImplicit","decodeComposite","composite","decoders","decoded","fields","recurseDecode","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","decode","customDecoders","decodeResponse","resolveRefBlockId","getRefId","resolveCadence","where","then","entries","cast","resolveArguments","buildPreSignable","collectAccounts","last","depth","ax","old","authorizer","curr","resolveAccounts","resolveValidators","validators","cb","sendFunction","defaultSend","resolveFunction","defaultResolve","decodersFromConfig","pattern","fromEntries","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveParams","params","transitionsPath","buildErrorMessage","param","buildWarningMessage"],"mappings":"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"}